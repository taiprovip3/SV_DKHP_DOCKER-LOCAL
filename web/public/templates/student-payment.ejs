<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/png" href="../images/favicon.ico">
    <title>ErukaLearn</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <link rel="stylesheet" href="../css/common.css" type="text/css">
    <link rel="stylesheet" href="../css/button.css" type="text/css">
    <script src="https://kit.fontawesome.com/ad778f42b3.js" crossorigin="anonymous"></script>
    <link href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script src="https://unpkg.com/pdfjs-dist/build/pdf.min.js"></script>
    <script src="https://unpkg.com/pdfjs-dist/build/pdf.worker.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/easyinvoice/dist/easyinvoice.min.js"></script>
    <style>
        #pdf {
            text-align: center;
        }

        #pdf canvas {
            border: 1px solid black;
            width: 95%;
        }
    </style>
</head>
<body>
    <%
        function formatNumber(number) {
            return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(number);
        }
        function formatDateTime(dateTimeString) {
            const dateTime = new Date(dateTimeString);
            const year = dateTime.getFullYear();
            const month = String(dateTime.getMonth() + 1).padStart(2, '0');
            const date = String(dateTime.getDate()).padStart(2, '0');
            const hours = String(dateTime.getHours() % 12 || 12).padStart(2, '0');
            const minutes = String(dateTime.getMinutes()).padStart(2, '0');
            const amPm = dateTime.getHours() >= 12 ? 'pm' : 'am';
            const formattedDateTime = `${date}/${month}/${year}, ${hours}:${minutes} ${amPm}`;
            return formattedDateTime;
        }
    %>
    <div class="container-fluid">
        <div class="row position-relative">

            <div class="position-absolute top-0 start-0 text-start mt-2 fs-3 w-50">
                <i class="fas fa-bars crs dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false" onclick="audio.play();"></i>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton2">
                    <li class="lead"><a class="dropdown-item" href="/student"><i class="fab fa-fort-awesome-alt"></i> Trang chủ</a></li>
                    <li class="lead"><a class="dropdown-item disabled"><i class="fas fa-journal-whills"></i> Học tập</a></li>
                    <li class="lead">
                        <div>
                            <a class="crs text-decoration-none d-block" href="/student/timetable">&emsp;&emsp;<i class="fas fa-calendar-check"></i> Lịch học theo tuần</a>
                            <a class="crs text-decoration-none d-block" href="/student/score">&emsp;&emsp;<i class="fas fa-chart-bar"></i> Kết quả học tập</a>
                            <a class="crs text-decoration-none d-block" href="/student/dkhp">&emsp;&emsp;<i class="fab fa-xbox"></i> Đăng ký học phần</a>
                            <a class="crs text-decoration-none d-block" href="/student/pattern">&emsp;&emsp;<i class="fab fa-windows"></i> Chương trình khung</a>
                        </div>
                    </li>
                    <li class="lead"><a class="dropdown-item disabled"><i class="fas fa-journal-whills"></i> Học phí</a></li>
                    <li class="lead">
                        <div>
                            <a class="crs text-decoration-none d-block" href="/student/debt">&emsp;&emsp;<i class="fas fa-sack-dollar"></i> Tra cứu công nợ</a>
                            <a class="crs text-decoration-none d-block" href="/student/order-detail">&emsp;&emsp;<i class="fas fa-file-invoice-dollar"></i> Biên lai tổng hợp</a>
                            <a class="crs text-decoration-none d-block text-white bg-primary" href="javascript:void(0)">&emsp;&emsp;<i class="fab fa-cc-apple-pay"></i> Thanh toán học phí</a>
                            <a class="crs text-decoration-none d-block" href="/student/wallet">&emsp;&emsp;<i class="fas fa-donate"></i> Nạp tiền vào ví</a>
                        </div>
                    </li>
                </ul>
            </div>
            <div class="position-absolute top-0 end-0 text-end mt-2 fs-3 w-50">
                <a href="/student"><i class="fas fa-door-open text-secondary crs" onclick="audio.play();"></i></a>
            </div>
            
            <div class="col-lg-12 py-2 px-5" style="background: #ededed;">
                <div class="bg-white border p-3">
                    <p class="fs-3 text-secondary fw-bold">Thanh toán học phí / công nợ trực tuyến</p>
                    <hr>
                    <div class="d-flex justify-content-between">
                        <div>
                            <p>Các phương thức thanh toán, loại giao dịch chấp nhận hiện tại <i class="fas fa-question-circle text-primary" data-bs-toggle="tooltip" title="Thanh toán trực tuyến là bạn có thể đóng tiền học phí mà không cần phải gặp mặt các nhân viên phòng tài chính kế toán, tránh mất thời gian đi lại, chậm trễ. Thực hiện đúng theo chỉ dẫn đóng tiền đảm bảo tin cậy 100%. Hỗ trợ sinh viên nếu xảy ra chậm trễ trong việc nhận tiền thanh toán."></i></p>
                            <div class="d-flex small">
                                <div class="text-center mx-1 px-2 py-1 crs border" onclick="onchangeMethodPayment('MOMO');" id="MOMO_DIV">
                                    <img src="https://res.cloudinary.com/dopzctbyo/image/upload/v1682548572/sv_dkhp/images_gvb6pb.png" alt="momo" width="32px" height="32px">
                                    <span class="d-block">Momo</span>
                                </div>
                                <div class="text-center mx-1 px-2 py-1 crs border" onclick="onchangeMethodPayment('VNPAY');" id="VNPAY_DIV">
                                    <img src="https://res.cloudinary.com/dopzctbyo/image/upload/v1682548504/sv_dkhp/Icon-VNPAY-QR_amlp8k.webp" alt="vnpay" width="32px" height="32px">
                                    <span class="d-block">VNPay</span>
                                </div>
                                <div class="text-center mx-1 px-2 py-1 crs border" onclick="onchangeMethodPayment('PAYPAL');" id="PAYPAL_DIV">
                                    <img src="https://res.cloudinary.com/dopzctbyo/image/upload/v1682548521/sv_dkhp/paypal_318-566100_je3ns0.png" alt="paypal" width="32px" height="32px">
                                    <span class="d-block">Paypal</span>
                                </div>
                                <div class="text-center mx-1 px-2 py-1 crs border" onclick="onchangeMethodPayment('WALLET');" id="WALLET_DIV">
                                    <img src="https://res.cloudinary.com/dopzctbyo/image/upload/v1682548535/sv_dkhp/LeS7kLv06u9mGx2OxtSAAZqxaE5hyR2ETUYOaGkimLi1gMFZwrrgpV6p8ZQuCr-PiQ_o17toq.png" alt="wallet" width="32px" height="32px">
                                    <span class="d-block">Số dư ví</span>
                                </div>
                            </div>
                        </div>
                        <div id="ControlerBar">
                            <label for="hocKy">Chọn học kỳ:</label>
                            <select name="select_course" id="select_course" class="form-select form-select-lg" onclick="audio.play();">
                                <option value="" onclick="audio.play();">Tất cả</option>
                                <% for(let i=0; i<LIST_COURSE.length; i++) { %>
                                    <option value="<%= LIST_COURSE[i].maKhoaHoc %>" onclick="audio.play();"><%= LIST_COURSE[i].alias %> (<%= LIST_COURSE[i].namBatDau %>-<%= LIST_COURSE[i].namKetThuc %>)</option>
                                <% } %>
                            </select>
                        </div>
                    </div>
                    <div class="table-responsive mt-4">
                        <table class="table table-bordered text-center">
                            <thead class="table-success">
                                <tr>
                                    <th>STT</th>
                                    <th>Mã công nợ</th>
                                    <th>Nội dung cần thu</th>
                                    <th>Số tín chỉ</th>
                                    <th>Bắt buộc?</th>
                                    <th>Số tiền (vnđ)</th>
                                    <th>Chọn</th>
                                </tr>
                            </thead>
                            <tbody id="myTBody">
                                <% for(let i=0; i<LIST_DEBT.length; i++) { %>
                                    <tr>
                                        <td><%= parseInt(i+1) %></td>
                                        <td><%= LIST_DEBT[i].id %></td>
                                        <td>Học phí "<span class="text-lowercase"><%= LIST_DEBT[i].monHoc.tenMonHoc %></span>"</td>
                                        <td><%= LIST_DEBT[i].monHoc.soTinChi %></td>
                                        <td><i class="fas fa-check-square text-success"></i></td>
                                        <td><%= new Intl.NumberFormat().format(LIST_DEBT[i].monHoc.soTinChi*850000) %>đ</td>
                                        <td><input type="checkbox" name="selectCongNo" id="<%= LIST_DEBT[i].id %>" value="<%= LIST_DEBT[i].id %>" onclick="handleRadioButtonClick(this.id);"></td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                    <div>
                        <p>Tổng công nợ thanh toán: <span class="fw-bold text-decoration-underline fs-3" id="total_payment">0</span>đ</p>
                        <p>Phương thức thanh toán: <span class="fw-bold fs-3" id="method_payment">Chưa chọn</span></p>
                        <div class="d-none mb-2" id="MOMO_OPTION">
                            <input type="radio" name="SELECT_MOMO" id="MOMO_ATM" value="MOMO_ATM" class="form-check-input" checked onclick="audio.play();" />
                            <label for="MOMO_ATM" class="form-check-label">Momo ATM</label>
                            &emsp;
                            <input type="radio" name="SELECT_MOMO" id="MOMO_QR" value="MOMO_QR" class="form-check-input" onclick="audio.play();" />
                            <label for="MOMO_QR" class="form-check-label">Quét mã QR momo</label>
                        </div>
                        <div class="d-none" id="WALLET_OPTION">
                            <p><i class="fas fa-dollar-sign text-success bg-info"></i> Số dư trong ví còn: <span class="text-warning fs-3"><%= new Intl.NumberFormat().format(STUDENT_DATA.soDu); %></span><span class="text-warning">đ</span></p>
                        </div>
                        <button class="btn btn-lg text-white fw-bold" style="background: #FF5A00;" onclick="pay();">Thanh toán</button>
                    </div>
                </div>
                <div class="bg-white border px-3 py-5 mt-2 position-relative overflow-auto" style="max-height: 100vh;">
                    <table class="w-100">
                        <tr class="border-bottom">
                            <th style="width: 15%;">Mã giao dịch</th>
                            <th style="width: 15%;">Số tiền</th>
                            <th style="width: 15%;">Thời gian</th>
                            <th style="width: 15%;" class="text-center">Trạng thái</th>
                            <th style="width: 35%;">Ghi chú</th>
                            <!-- <th><i class="fas fa-question-circle" data-bs-toggle="tooltip" data-bs-placement="right" title="Trạng thái giao dịch 'Đang chờ..' là những giao dịch bạn bỏ ngang hoặc server tắt ngẽn lúc bạn đang thanh toán dẫn đến chưa xử lý! Có thể nhấp 'Xác thực lại'"></i></th> -->
                            <th style="width: 5%;"></th>
                        </tr>
                        <% for (let i=0; i<LIST_PAYMENT.length; i++) { %>
                            <tr class="border-top">
                                <td style="width: 15%;"><%= LIST_PAYMENT[i].maGiaoDich %></td>
                                <td style="width: 15%;"><%= formatNumber(LIST_PAYMENT[i].balance) %></td>
                                <td style="width: 15%;"><%= formatDateTime(LIST_PAYMENT[i].createdTime) %></td>
                                <td style="width: 15%;" class="text-center teal-color">
                                    <% if(LIST_PAYMENT[i].status) { %>
                                        <i class="fas fa-check-circle text-success"></i>
                                    <% } else { %>
                                        <div class="spinner-border spinner-border-sm"></div>
                                    <% } %>
                                </td>
                                <td style="width: 35%;"><%= LIST_PAYMENT[i].ghiChu %></td>
                                <td style="width: 5%; background-color: #e7e6e6;" class="dropup text-center">
                                    <% if(!LIST_PAYMENT[i].status) { %>
                                        <i class="fas fa-undo-alt crs text-secondary" data-bs-toggle="dropdown"></i>
                                    <% } %>
                                    <div class="dropdown-menu dropdown-menu-end text-end border-0">
                                        <button type="button" class="border-0 p-2 text-white bg-primary" onclick="recheckPayment('<%= LIST_PAYMENT[i].maGiaoDich %>');">Xác thực lại</button>
                                    </div>
                                </td>
                            </tr>
                        <% } %>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="position-fixed bottom-0 small p-2 teal-color">
        Secure <i class="fas fa-shield-alt"></i>
    </div>
    <!-- Paypal Modal -->
    <div class="modal" id="paypalModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Xác nhận thanh toán</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    Paypal hiện tại chỉ chấp nhận thanh toán tiền tệ đơn vị USD. Sẽ có sự chênh lệnh mệnh giá với các phương thức thanh toán khác là đồng VNĐ. Chúng tôi sẽ chuyển bạn đến trang thanh toán của Paypal.
                </div>
                <div class="modal-footer">
                    <!-- <div id="paypal-button-container"></div> -->
                    <button type="button" class="paypal-button" onclick="checkoutPaypal();"><i class="fab fa-paypal text-warning"></i> PayPal checkout</button>
                </div>
            </div>
        </div>
    </div>
</body>
<script>
const audio = new Audio();
audio.src = "../audio/click.mp3";
const pathNodejs = '<%= process.env.EJS_API_URL %>';
const pathPhpApache = '<%= process.env.PHP_API_URL %>';
var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl){
    return new bootstrap.Tooltip(tooltipTriggerEl);
});
var total_debt = [];
var total_payment = 0;
var method_payment = "";
var student_wallet = <%= STUDENT_DATA.soDu %>;

$(document).ready(function() {
    $("#btn-pdf").click(function() {
        console.log("ok");
        var data = {
            "customize": {
            },
            "images": {
                "logo": "https://rubee.com.vn/wp-content/uploads/2021/05/logo-iuh-1.png",
                "background": "https://public.easyinvoice.cloud/img/watermark-draft.jpg"
            },
            "sender": {
                "company": "Hoá đơn học phí Pdf",
                "address": "Số 12 Nguyễn Văn Bảo, Phường 4, Quận Gò Vấp, Thành phố Hồ Chí Minh",
                "zip": "70000 NVB",
                "city": "Hồ Chí Minh",
                "country": "Việt Nam"
            },
            // Your recipient
            "client": {
                "company": "Sinh viên IUH",
                "address": "60/122, Tổ 10, KP8, Phường TCH, Q12",
                "zip": "70000 HTH",
                "city": "Hồ Chí Minh",
                "country": "Việt Nam"
            },
            "information": {
                "number": "2021.0001",
                "date": "12-12-2021",
                "due-date": "31-12-2021"
            },
            "products": [
                {
                    "quantity": 1,
                    "description": "Chứng chỉ TOEIC 450",
                    "tax-rate": 0,
                    "price": 4250000
                },
            ],
            "bottom-notice": "Đã được toà - Chi cục thế phường - Gò Vấp tỉnh đóng dấu chức thực bảo mật thông tin ✔️.",
            "settings": {
                "currency": "VND",
            },
            "translate": {
            },
        };
        $.ajax({
            type: "POST",
            url: pathNodejs+"/test/send-mail",
            data: JSON.stringify({data}),
            contentType: 'application/json',
            success: function(callback) {
                console.log("Mycallback=",callback);
            }
        });
    });
    $("#select_course").change(async function(){
        total_debt = [];
        total_payment = 0;
        $("#total_payment").text(total_payment);
        const maKhoaHoc= $(this).val();
        let undebts = [];
        if(maKhoaHoc != "")
            undebts = await getUnDebtsByStudentIdAndCourseId(maKhoaHoc);
        else undebts = await getUnDebtsByStudentId();
        let myLoop = "";
        for(let i=0; i<undebts.length; i++) {
            myLoop += 
            '<tr>'+
                '<td>'+ parseInt(i+1) +'</td>'+
                '<td>'+ undebts[i].id +'</td>'+
                '<td>Học phí "<span class="text-lowercase">'+ undebts[i].monHoc.tenMonHoc +'</span>"</td>'+
                '<td>'+ undebts[i].monHoc.soTinChi +'</td>'+
                '<td><i class="fas fa-check-square text-success"></i></td>'+
                '<td>'+ formatCurrency(undebts[i].monHoc.soTinChi*850000) +'đ</td>'+
                '<td><input type="checkbox" name="selectCongNo" id="'+ undebts[i].id +'" value="'+ undebts[i].id +'" onchange="handleRadioButtonClick(this.id);"></td>'+
            '</tr>';
        }
        $("#myTBody").html(myLoop);
    });
});
async function pay() {
    audio.play();
    if(total_debt.length <= 0) {
        toastr.error('Bạn chưa chọn nội dung nào để thanh toán.', 'Mục thanh toán!');
        return;
    }
    if(method_payment == "") {
        toastr.error('Bạn chưa chọn phương thức thanh toán.', 'Phương thức thanh toán!');
        return;
    }
    if(method_payment == "WALLET" && student_wallet == 0) {
        toastr.error('Số dư ví WALLET của bạn không đủ.', 'Số dư ví!');
        return;
    }
    //handle thanh toán here...
    if(method_payment === "MOMO") {
        const momo_method = $("input[name='SELECT_MOMO']:checked").val();
        var mapForm = document.createElement("form");
        mapForm.className = "d-none";
        mapForm.target = "Map";
        mapForm.method = "POST"; // or "post" if appropriate
        mapForm.action = pathPhpApache+"/momo/momo.php";
        var mapInput = document.createElement("input"); //input momo_method
        mapInput.type = "text";
        mapInput.name = "momo_method";
        mapInput.value = momo_method;
        mapForm.appendChild(mapInput);
        var mapInput = document.createElement("input"); //input total_payment
        mapInput.type = "text";
        mapInput.name = "total_payment";
        mapInput.value = total_payment;
        mapForm.appendChild(mapInput);
        for(let i=0; i<total_debt.length; i++) { //nhiều input mã cần thanh toán
            var mapInput = document.createElement("input");
            mapInput.type = "text";
            mapInput.name = "debt"+i;
            mapInput.value = total_debt[i];
            mapForm.appendChild(mapInput);
        }
        var mapInput = document.createElement("input"); //input số lượng phần tử mảng
        mapInput.type = "text";
        mapInput.name = "total_debt_length";
        mapInput.value = total_debt.length;
        mapForm.appendChild(mapInput);
        var mapInput = document.createElement("input"); //input maSinhVien
        mapInput.type = "text";
        mapInput.name = "maSinhVien";
        mapInput.value = <%= STUDENT_DATA.maSinhVien %>;
        mapForm.appendChild(mapInput);
        document.body.appendChild(mapForm);
        const parentWidth = window.screen.availWidth;   //setting windows
        const parentHeight = window.screen.availHeight;
        const childWidth = parentWidth - (parentWidth * 0.2);
        const childHeight = parentHeight - (parentHeight * 0.2);
        map = window.open("", "Map", "status=0,title=0,height="+childHeight+",width="+childWidth+",scrollbars=1");
        if(map) mapForm.submit();
        else alert('You must allow popups for this map to work.');
    } else {
        if(method_payment === "VNPAY") {
            //Do payVNPay here...
            var mapForm = document.createElement("form");
            mapForm.className = "d-none";
            mapForm.target = "Map";
            mapForm.method = "POST"; // or "post" if appropriate
            mapForm.action = pathPhpApache+"/vnpay/vnpay.php";
            var mapInput = document.createElement("input"); //input momo_method
            mapInput.type = "text";
            mapInput.name = "method_payment";
            mapInput.value = method_payment;
            mapForm.appendChild(mapInput);
            var mapInput = document.createElement("input"); //input total_payment
            mapInput.type = "text";
            mapInput.name = "total_payment";
            mapInput.value = total_payment;
            mapForm.appendChild(mapInput);
            for(let i=0; i<total_debt.length; i++) { //nhiều input mã cần thanh toán
                var mapInput = document.createElement("input");
                mapInput.type = "text";
                mapInput.name = "debt"+i;
                mapInput.value = total_debt[i];
                mapForm.appendChild(mapInput);
            }
            var mapInput = document.createElement("input"); //input số lượng phần tử mảng
            mapInput.type = "text";
            mapInput.name = "total_debt_length";
            mapInput.value = total_debt.length;
            mapForm.appendChild(mapInput);
            var mapInput = document.createElement("input"); //input maSinhVien
            mapInput.type = "text";
            mapInput.name = "maSinhVien";
            mapInput.value = <%= STUDENT_DATA.maSinhVien %>;
            mapForm.appendChild(mapInput);
            document.body.appendChild(mapForm);
            const parentWidth = window.screen.availWidth;   //setting windows
            const parentHeight = window.screen.availHeight;
            const childWidth = parentWidth - (parentWidth * 0.2);
            const childHeight = parentHeight - (parentHeight * 0.2);
            map = window.open("", "Map", "status=0,title=0,height="+childHeight+",width="+childWidth+",scrollbars=1");
            if(map) mapForm.submit();
            else alert('You must allow popups for this map to work.');
        }
        if(method_payment === "PAYPAL") {
            //Do payPayMent here ...
            swal({
                title: "Bạn có chắc chắn?",
                text: "Paypal hiện tại chỉ chấp nhận thanh toán tiền tệ đơn vị USD. Sẽ có sự chênh lệnh mệnh giá với các phương thức thanh toán khác là đồng VNĐ. Chúng tôi sẽ chuyển bạn đến trang thanh toán của Paypal.",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {
                    $('#paypalModal').modal('toggle');
                } else audio.play();
            });
        }
        if(method_payment === "WALLET") {
            //Do payWallet here ...
            swal({
                title: "Vui lòng xác nhận lại",
                text: "Bạn có chắc chắn muốn thanh toán bằng ví số dư của bạn không?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: pathNodejs+"/student/payment/resolvePaymentStudentWallet",
                        data: JSON.stringify({total_debt}),
                        contentType: 'application/json',
                        success: function(swalResponse) {
                            if(swalResponse.icon == "success") {
                                swal({
                                    title: "Thành công",
                                    text: swalResponse.text,
                                    icon: swalResponse.icon,
                                }).then((value) => {
                                    window.location.href = window.location.href;
                                });
                            } else {
                                swal({
                                    title: "Thất bại",
                                    text: swalResponse.text,
                                    icon: swalResponse.icon,
                                });
                            }
                        }
                    });      
                }
            });
        }
    }

}
function onchangeMethodPayment(method_type) {
    audio.play();
    method_payment = method_type;
    $("#method_payment").text(method_type);
    if(method_type === "MOMO") {
        $("#MOMO_DIV").css({"background": "blue", "color": "white", "font-weight": "bold"});
        $("#VNPAY_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#PAYPAL_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#WALLET_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#MOMO_OPTION").removeClass('d-none');
        $("#WALLET_OPTION").addClass('d-none');
        return;
    }
    if(method_type === "WALLET") {
        $("#WALLET_DIV").css({"background": "blue", "color": "white", "font-weight": "bold"});
        $("#VNPAY_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#PAYPAL_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#MOMO_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#WALLET_OPTION").removeClass('d-none');
        $("#MOMO_OPTION").addClass('d-none');
        return;
    }
    if(method_type === "VNPAY") {
        $("#VNPAY_DIV").css({"background": "blue", "color": "white", "font-weight": "bold"});
        $("#MOMO_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#PAYPAL_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#WALLET_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#MOMO_OPTION").addClass('d-none');
        $("#WALLET_OPTION").addClass('d-none');
        return;
    }
    if(method_type === "PAYPAL") {
        $("#PAYPAL_DIV").css({"background": "blue", "color": "white", "font-weight": "bold"});
        $("#VNPAY_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#MOMO_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#WALLET_DIV").css({"background": "unset", "color": "unset", "font-weight": "unset"});
        $("#MOMO_OPTION").addClass('d-none');
        $("#WALLET_OPTION").addClass('d-none');
        return;
    }
}
async function handleRadioButtonClick(id) {
    audio.play();
    const undebt = await getUnDebtById(id);
    const soTien = undebt.monHoc.soTinChi * 850000;
    if(document.getElementById(id).checked) {
        total_debt.push(id);
        total_payment += soTien;
    } else {
        total_debt = total_debt.filter(function(item) {
            return item !== id;
        });
        total_payment -= soTien;
    }
    $("#total_payment").text(formatCurrency(total_payment));
}
async function getUnDebtsByStudentIdAndCourseId(courseId) {
    return $.ajax({
        type: "POST",
        url: pathNodejs+"/student/payment/getUnDebtsByStudentIdAndCourseId",
        data: JSON.stringify({courseId}),
        contentType: 'application/json',
    }).then(data => data);
}
async function getUnDebtsByStudentId() {
    return $.ajax({
        type: "GET",
        url: pathNodejs+"/student/payment/getUnDebtsByStudentId",
        contentType: 'application/json',
    }).then(data => data);
}
async function getUnDebtById(debtId) {
    return $.ajax({
        type: "POST",
        url: pathNodejs+"/student/payment/getUnDebtById",
        data: JSON.stringify({debtId}),
        contentType: 'application/json',
    }).then(data => data);
}
function formatCurrency(number) {
    return new Intl.NumberFormat().format(number);
}
async function createTransaction() {// Hàm nhận input {studentId, balance} trả về string maGiaoDich
    const maSinhVien = '<%= STUDENT_DATA.maSinhVien %>';
    const unDebtIds = total_debt.toString();
    return $.ajax({
        type: "POST",
        url: pathNodejs+"/student/payment/createTransaction",
        data: JSON.stringify({studentId: maSinhVien, balance: total_payment, unDebtIds}),
        contentType: 'application/json',
    }).then(data => data);
}
async function checkoutPaypal() {
    const maThanhToanGiaoDich = await createTransaction();
    const maSinhVien = '<%= STUDENT_DATA.maSinhVien %>';
    const maCongNo = total_debt.toString();
    const urlBuilder = pathNodejs+`/paypal/payment?maThanhToanGiaoDich=${maThanhToanGiaoDich}&maCongNo=${maCongNo}&maSinhVien=${maSinhVien}`;
    window.location.href = urlBuilder;
}
function recheckPayment(maGiaoDich) {
    $.ajax({
        type: "PUT",
        url: pathNodejs+`/student/payment/recheckPayment/${maGiaoDich}`,
        contentType: 'application/json',
        success: (data) => {
            // [NO_IPN_FOUND, INTERNAL_SERVER_ERROR, PAYMENT_DONE_BEFORE, RECHECK_SUCCESS]
            switch (data) {
                case "NO_IPN_FOUND":
                    toastr.error('Giao dịch này không còn tồn tại dưới hệ thống!', `Không tìm thấy ${maGiaoDich}`);
                    break;
                case "PAYMENT_DONE_BEFORE":
                    toastr.error('Giao dịch này đã hoàn tất xử lý trước đó', 'Giao dịch đã hoàn tất');
                    break;
                case "INTERNAL_SERVER_ERROR":
                    toastr.error(`Không tìm thấy giao dịch ${maGiaoDich} trong hệ thống tích hợp`, 'Lỗi');
                    swal({
                        title: "Lỗi!",
                        text: `Không tìm thấy mã giao dịch ${maGiaoDich}\ntrong hệ thống tích hợp`,
                        icon: "warning",
                        dangerMode: true,
                    }).then((val) => {
                        location.reload();
                    });
                    break;
                case "RECHECK_SUCCESS":
                    toastr.success('Giao dịch đã có sự thay đổi, hãy tải lại trang', 'Xác thực thành công');
                    swal({
                        title: "Gọi lại thanh công!",
                        text: "Giao dịch có tồn tại trong hệ thống và đã được gọi lại!",
                        icon: "success",
                        button: "Aww yiss!",
                    }).then((val) => {
                        location.reload();
                    });
                    break;
                case "NO_PAYPAL_TRANSACTION_ID_FOUND":
                    toastr.error('Mã giao dịch trong hệ thống tích hợp', `Không tìm thấy ${maGiaoDich}`);
                    break;
                case "PAYMENT_INSUFFICIENT":
                    toastr.error('Giao dịch này không đủ số tiền để thanh toán công nợ!', `Thất bại ${maGiaoDich}`);
                    swal({
                        title: "Lỗi!",
                        text: `Thất bại. Giao dịch chứa số tiền thanh toán không đủ, vui lòng nạp thêm tiền hoặc tạo giao dịch mới!`,
                        icon: "warning",
                        dangerMode: true,
                    }).then((val) => {
                        location.reload();
                    });
                    break;
                default:
                    break;
            }
        }, error: (error) => {
            console.error(error);
            toastr.error('Server đã xảy ra lỗi không xác định', 'Internal server error');
            swal({
                title: "Lỗi!",
                text: "Đã xảy ra lỗi không xác định trong hệ thống",
                icon: "warning",
                dangerMode: true,
            }).then((val) => {
                location.reload();
            });
        },
    });
}
</script>
</html>